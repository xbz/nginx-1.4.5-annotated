configure
To enable a debugging log, nginx needs to be configured during the build:
./configure --with-debug

enable debug code inside conditional directive of C preprocessor,
in objs/Makefile:
CFLAGS =  -pipe  -O -W -Wall -Wpointer-arith -Wno-unused-parameter -Werror -g
remove -O flag of CFLAGS variable
#if (NGX_HAVE_EPOLL) && !(NGX_TEST_BUILD_EPOLL)
    int                  fd;
#endif

#define NGX_CORE_MODULE      0x45524F43   /* "CORE" */ /* src/core/ngx_conf_file.h   */
#define NGX_EVENT_MODULE     0x544E5645   /* "EVNT" */ /* src/event/ngx_event.h      */
#define NGX_CONF_MODULE      0x464E4F43   /* "CONF" */ /* src/core/ngx_conf_file.h   */
#define NGX_HTTP_MODULE      0x50545448   /* "HTTP" */ /* src/http/ngx_http_config.h */
#define NGX_MAIL_MODULE      0x4C49414D   /* "MAIL" */ /* src/mail/ngx_mail.h        */

NGX_CORE_MODULE  8
  ngx_core_module
  ngx_events_module
  ngx_http_module
  ngx_errlog_module
  ngx_regex_module
  ngx_mail_module
  ngx_openssl_module
  ngx_google_perftools_module
NGX_EVENT_MODULE 10
  ngx_event_core_module
  ngx_epoll_module
  ngx_select_module
  ngx_poll_module
  ...
NGX_CONF_MODULE  1
NGX_HTTP_MODULE  57
NGX_MAIL_MODULE  7

core module uses index, others(http,event,mail) use ctx_index?
module.index:
  all modules, 0,1,2,3,...
module.ctx_index: divide into 3 groups
  event_module, 0,1,2,3,...
  http_module,  0,1,2,3,...
  mail_module,  0,1,2,3,...
$ find -name "*.[hc]" | xargs fgrep --color 'max_module++'
src/core/nginx.c:      ngx_modules[i]->index     = ngx_max_module++;
src/event/ngx_event.c: ngx_modules[i]->ctx_index = ngx_event_max_module++;
src/http/ngx_http.c:   ngx_modules[m]->ctx_index = ngx_http_max_module++;
src/mail/ngx_mail.c:   ngx_modules[m]->ctx_index = ngx_mail_max_module++;

objs/ngx_modules.c
ngx_modules's definition:
ngx_module_t *ngx_modules[] = {
    &ngx_core_module,       /* 0.  NGX_CORE_MODULE  */
    &ngx_errlog_module,     /* 1.  NGX_CORE_MODULE  */
    &ngx_conf_module,       /* 2.  NGX_CONF_MODULE  */
    &ngx_events_module,     /* 3.  NGX_CORE_MODULE  */
    &ngx_event_core_module, /* 4.  NGX_EVENT_MODULE */
    &ngx_epoll_module,      /* 5.  NGX_EVENT_MODULE */
    &ngx_regex_module,      /* 6.  NGX_CORE_MODULE  */
    &ngx_http_module,       /* 7.  NGX_CORE_MODULE  */
    &ngx_http_core_module,  /* 8.  NGX_HTTP_MODULE  */
    &ngx_http_log_module,   /* 9.  NGX_HTTP_MODULE  */
    &ngx_http_upstream_module,
    &ngx_http_static_module,
    &ngx_http_autoindex_module,
    &ngx_http_index_module,
    &ngx_http_auth_basic_module,
    &ngx_http_access_module,
    &ngx_http_limit_conn_module,
    &ngx_http_limit_req_module,
    &ngx_http_geo_module,
    &ngx_http_map_module,
    &ngx_http_split_clients_module,
    &ngx_http_referer_module,
    &ngx_http_rewrite_module,
    &ngx_http_proxy_module,
    &ngx_http_fastcgi_module,
    &ngx_http_uwsgi_module,
    &ngx_http_scgi_module,
    &ngx_http_memcached_module,
    &ngx_http_empty_gif_module,
    &ngx_http_browser_module,
    &ngx_http_upstream_ip_hash_module,
    &ngx_http_upstream_least_conn_module,
    &ngx_http_upstream_keepalive_module,
    &ngx_http_write_filter_module,
    &ngx_http_header_filter_module,
    &ngx_http_chunked_filter_module,
    &ngx_http_range_header_filter_module,
    &ngx_http_gzip_filter_module,
    &ngx_http_postpone_filter_module,
    &ngx_http_ssi_filter_module,
    &ngx_http_charset_filter_module,
    &ngx_http_userid_filter_module,
    &ngx_http_headers_filter_module,
    &ngx_http_copy_filter_module,
    &ngx_http_range_body_filter_module,
    &ngx_http_not_modified_filter_module,
    NULL
};

set module ctx_index
ngx_modules[i]->ctx_index
function ngx_events_block(command events), set event module's ctx_index
function ngx_http_block(command http), set http module's ctx_index
function ngx_mail_block(command mail), set mail module's ctx_index
index:0  ctx_index:0 /* core */
index:1  ctx_index:0 /* core */
index:2  ctx_index:0 /* conf */
index:3  ctx_index:0 /* core */
index:4  ctx_index:0 /* event module begin */
index:5  ctx_index:1 /* event module end   */
index:6  ctx_index:0 /* core */
index:7  ctx_index:0 /* core */
index:8  ctx_index:0 /* http module begin */
index:9  ctx_index:1
index:10 ctx_index:2
index:11 ctx_index:3
index:12 ctx_index:4
index:13 ctx_index:5
index:14 ctx_index:6
index:15 ctx_index:7
index:16 ctx_index:8
index:17 ctx_index:9
index:18 ctx_index:10
index:19 ctx_index:11
index:20 ctx_index:12
index:21 ctx_index:13
index:22 ctx_index:14
index:23 ctx_index:15
index:24 ctx_index:16
index:25 ctx_index:17
index:26 ctx_index:18
index:27 ctx_index:19
index:28 ctx_index:20
index:29 ctx_index:21
index:30 ctx_index:22
index:31 ctx_index:23
index:32 ctx_index:24
index:33 ctx_index:25
index:34 ctx_index:26
index:35 ctx_index:27
index:36 ctx_index:28
index:37 ctx_index:29
index:38 ctx_index:30
index:39 ctx_index:31
index:40 ctx_index:32
index:41 ctx_index:33
index:42 ctx_index:34
index:43 ctx_index:35
index:44 ctx_index:36
index:45 ctx_index:37 /* http module end */

nginx.conf minimal
1. empty nginx.conf
  nginx start fail
    nginx: [emerg] no "events" section in configuration
# cat nginx.conf
2. events
  nginx start ok
  no listening socket
  curl access fail(curl ip:80, curl ip:8000)
# cat nginx.conf
events {
}
3. events, http
  nginx start ok
  no listening socket
  curl access fail(curl ip:80, curl ip:8000)
# cat nginx.conf
events {
}
http {
}
4. events, http, server(minimal accessable nginx.conf)
  nginx start ok
  has listening socket
  curl ok(curl ip:8000)
# cat ngins.conf
events {
}
http {
  server {
  }
}
